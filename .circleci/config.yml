version: 2.1

orbs:
  ruby: circleci/ruby@1.1.0
  node: circleci/node@2
  aws-cli: circleci/aws-cli@0.1
  orb-tools: circleci/orb-tools@9.0
  aws-code-deploy: circleci/aws-code-deploy@1.0.1

jobs:
  build:
    working_directory: ~/ruby-sample
    executor: ruby/default
    steps:
      - run: 
          name: install sqlite3 and yarn
          command: sudo apt-get update && sudo apt-get install libsqlite3-dev yarn python3-pip -y
      - checkout
      - aws-cli/setup
      - ruby/install-deps
      # Store bundle cache
      - aws-code-deploy/push-bundle:
          application-name: sampleapp
          bundle-source: ~/ruby-sample
          bundle-bucket: sampleappraj
          bundle-key: sample/$CIRCLE_PROJECT_REPONAME-${CIRCLE_BRANCH}-$CIRCLE_TAG-$CIRCLE_JOB
          arguments: eTag=v001
      - persist_to_workspace:
          root: .
          paths:
            - .    
  deploy:
   
    executor: ruby/default
    steps:
      - attach_workspace:
          at: .
      - run: 
          name: python3 setup
          command: sudo apt-get update && sudo apt-get install python3-pip -y
      - aws-cli/setup
      - aws-code-deploy/deploy-bundle:
          application-name: sampleapp
          deployment-group: sampleapp-group
          bundle-bucket: sampleappraj
          bundle-key: sample/$CIRCLE_PROJECT_REPONAME-${CIRCLE_BRANCH}-$CIRCLE_TAG-$CIRCLE_JOB      
  test:
    parallelism: 1
    docker:
      - image: cimg/ruby:2.7-node
      - image: circleci/postgres:9.5-alpine
        environment:
          POSTGRES_USER: circleci-demo-ruby
          POSTGRES_DB: rails_blog_test
          POSTGRES_PASSWORD: ""
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      PGHOST: 127.0.0.1
      PGUSER: circleci-demo-ruby
      PGPASSWORD: ""
      RAILS_ENV: test
    steps:
      - checkout
      - run: 
          name: install sqlite3
          command: apt-get install libsqlite3-de -y
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
          cache-key: "yarn.lock"
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: bundle exec rails db:schema:load --trace
      # Run rspec in parallel
      - ruby/rspec-test
      - ruby/rubocop-check

workflows:
  version: 2
  build_and_test_deploy:
    jobs:
      - build
      - deploy:
         requires:
            - build
 #     - test:
 #         requires:
 #           - build
         
 
